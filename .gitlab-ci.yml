stages:
  - test
  - build
  - deploy

image: node:20-alpine

variables:
  MR_DEPLOY_ENVIRONMENT:
    value: "dev-review"
    options:
      - "dev-review"
      - "feature-review"
    description: "Choose the environment to deploy the MR"

cache:
  # Cache modules in between jobs: https://docs.gitlab.com/ee/ci/caching/#cache-nodejs-dependencies
  - key: $CI_COMMIT_REF_SLUG
    paths:
      - .npm/
      # We do not cache node_modules for Angular projects until they are used between several jobs
      # - angular/.npm

test:
  tags:
    # - saas-linux-medium-amd64
    - sncf-runner
  image: zenika/alpine-chrome:with-puppeteer
  stage: test
  script:
    - npm ci --cache .npm --prefer-offline
    - npm test

build:
  tags:
    - sncf-runner
  stage: build
  artifacts:
    expire_in: 4 days
    paths:
      - storybook-static/
      - loader/
      - dist/
      - angular/dist/wcs-angular/
      - angular/dist/wcs-formly/
      - react/dist/
  script:
    # Build wcs core
    - npm ci --cache .npm --prefer-offline --ignore-scripts puppeteer
    - npm run build
    # Build angular packages
    - cd angular/
    - npm ci --cache .npm --prefer-offline
    - npm run build:wcs-angular
    - npm run build:wcs-formly
    - cd ..
    # Build react packages
    - cd react/
    - npm ci --cache .npm --prefer-offline
    - npm run build
    - cd ..

# Old deploy job for Gitlab Pages, now replaced by deploy-azure (we deploy a redirect page to Gitlab Pages)
pages:
  tags:
    - gitlab-org
  stage: deploy
  dependencies:
    - build
  only:
    - develop
    - master
  artifacts:
    expire_in: 4 days
    paths:
      - public
  script:
    - mkdir -p public/develop/
    - mkdir -p public/master/
    - cp -r doc/gitlab-pages-redirect-root/* public/
    - cp -r doc/gitlab-pages-redirect-root/* public/develop/
    - cp -r doc/gitlab-pages-redirect-root/* public/master/

deploy-azure:
  image: node:20
  stage: deploy
  tags:
    - sncf-runner
  rules:
    - if: $CI_COMMIT_BRANCH == "master"
      variables:
        DEPLOY_ENV_NAME: "production"
    - if: $CI_COMMIT_BRANCH == "develop"
      variables:
        DEPLOY_ENV_NAME: "develop"
  variables:
    DIST_PATH: '$CI_PROJECT_DIR/storybook-static'
  script:
    - npm install -g @azure/static-web-apps-cli
    - swa deploy --app-location ./ --output-location $DIST_PATH --verbose=silly --deployment-token $DEPLOYMENT_TOKEN --env $DEPLOY_ENV_NAME

# PUBLISH PACKAGES FOR TAGS
publish-wcs-core:
  tags:
    - sncf-runner
  stage: deploy
  only:
    - tags
  dependencies:
    - build
  script:
    - echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc && npm publish
publish-wcs-angular:
  tags:
    - sncf-runner
  stage: deploy
  only:
    - tags
  dependencies:
    - build
  script:
    - cd angular/dist/wcs-angular/ && echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc && npm publish
publish-wcs-formly:
  tags:
    - sncf-runner
  stage: deploy
  only:
    - tags
  dependencies:
    - build
  script:
    - cd angular/dist/wcs-formly/ && echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc && npm publish
publish-wcs-react:
  tags:
    - sncf-runner
  stage: deploy
  only:
    - tags
  dependencies:
    - build
  script:
    - cd react/ && echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" > .npmrc && npm publish

# TEMPORARY DEPLOYMENT JOB FOR MR
deploy-mr-tmp-env:
  image: node:20
  stage: deploy
  tags:
    - sncf-runner
  only:
    - web
  variables:
    DIST_PATH: '$CI_PROJECT_DIR/storybook-static'
  script:
    - npm install -g @azure/static-web-apps-cli
    - swa deploy --app-location ./ --output-location $DIST_PATH --verbose=silly --deployment-token $DEPLOYMENT_TOKEN --env $MR_DEPLOY_ENVIRONMENT
