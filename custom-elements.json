{
  "version": 1.2,
  "tags": [
    {
      "name": "wcs-action-bar",
      "path": "./src/components/action-bar/action-bar.tsx",
      "description": "",
      "attributes": [
        {
          "name": "gutter",
          "type": "boolean",
          "description": "Determines if the action bar should have a border at the bottom.\r\nYou should not use this property if a gutter is already present on tabs",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "gutter",
          "type": "boolean",
          "description": "Determines if the action bar should have a border at the bottom.\r\nYou should not use this property if a gutter is already present on tabs",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-app",
      "path": "./src/components/app/app.tsx",
      "description": "",
      "attributes": [],
      "properties": [],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-badge",
      "path": "./src/components/badge/badge.tsx",
      "description": "you can define the opacity rate to apply with the following CSS variable `--wcs-badge-ligther-percentage`.\r\n\r\n```html\r\n<wcs-badge shape=\"normal\" color=\"initial\" class=\"wcs-primary\">Primary</wcs-badge>\r\n<wcs-badge shape=\"normal\" color=\"initial\" class=\"wcs-secondary\">Secondary</wcs-badge>\r\n<wcs-badge shape=\"normal\" color=\"initial\" class=\"wcs-success\">Success</wcs-badge>\r\n<wcs-badge shape=\"normal\" color=\"initial\" class=\"wcs-danger\">Danger</wcs-badge>\r\n<wcs-badge shape=\"normal\" color=\"initial\" class=\"wcs-warning\">Warning</wcs-badge>\r\n<wcs-badge shape=\"normal\" color=\"initial\" class=\"wcs-info\">Info</wcs-badge>\r\n<wcs-badge shape=\"normal\" color=\"initial\" class=\"wcs-light\">Light</wcs-badge>\r\n<wcs-badge shape=\"normal\" color=\"initial\" class=\"wcs-dark\">Dark</wcs-badge>\r\n```\r\n\r\n```html\r\n<wcs-badge shape=\"rounded\" color=\"lighter\" class=\"wcs-primary\">Primary</wcs-badge>\r\n<wcs-badge shape=\"rounded\" color=\"lighter\" class=\"wcs-secondary\">Secondary</wcs-badge>\r\n<wcs-badge shape=\"rounded\" color=\"lighter\" class=\"wcs-success\">Success</wcs-badge>\r\n<wcs-badge shape=\"rounded\" color=\"lighter\" class=\"wcs-danger\">Danger</wcs-badge>\r\n<wcs-badge shape=\"rounded\" color=\"lighter\" class=\"wcs-warning\">Warning</wcs-badge>\r\n<wcs-badge shape=\"rounded\" color=\"lighter\" class=\"wcs-info\">Info</wcs-badge>\r\n<wcs-badge shape=\"rounded\" color=\"lighter\" class=\"wcs-light\">Light</wcs-badge>\r\n<wcs-badge shape=\"rounded\" color=\"lighter\" class=\"wcs-dark\">Dark</wcs-badge>\r\n```",
      "attributes": [
        {
          "name": "color",
          "type": "\"initial\" | \"lighter\"",
          "description": "Allows you to change the color of the badge to make it less bright (based on the color chosen by the CSS class).",
          "defaultValue": "'initial'",
          "required": false
        },
        {
          "name": "shape",
          "type": "\"normal\" | \"rounded\"",
          "description": "Define the shape of the badge",
          "defaultValue": "'normal'",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "color",
          "type": "\"initial\" | \"lighter\"",
          "description": "Allows you to change the color of the badge to make it less bright (based on the color chosen by the CSS class).",
          "defaultValue": "'initial'",
          "required": false
        },
        {
          "name": "shape",
          "type": "\"normal\" | \"rounded\"",
          "description": "Define the shape of the badge",
          "defaultValue": "'normal'",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-button",
      "path": "./src/components/button/button.tsx",
      "description": "Button component, can also be a link when specifying href.",
      "attributes": [
        {
          "name": "disabled",
          "type": "boolean",
          "description": "Specify wether the button is disabled or not.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "description": "Set a URL to point to.\r\nIf specified use a `a` tag instead of `btn`.",
          "required": false
        },
        {
          "name": "mode",
          "type": "\"clear\" | \"plain\" | \"stroked\"",
          "description": "This attribute specify the appearance of the button.",
          "defaultValue": "'plain'",
          "required": false
        },
        {
          "name": "ripple",
          "type": "boolean",
          "description": "Specify wether the button should have a ripple effect or not.",
          "defaultValue": "true",
          "required": false
        },
        {
          "name": "shape",
          "type": "\"normal\" | \"round\" | \"small\" | \"square\"",
          "description": "Specify the shape of the button.",
          "defaultValue": "'normal'",
          "required": false
        },
        {
          "name": "type",
          "type": "\"button\" | \"submit\"",
          "description": "Specify the button type.",
          "defaultValue": "'button'",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "disabled",
          "type": "boolean",
          "description": "Specify wether the button is disabled or not.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "href",
          "type": "string",
          "description": "Set a URL to point to.\r\nIf specified use a `a` tag instead of `btn`.",
          "required": false
        },
        {
          "name": "mode",
          "type": "\"clear\" | \"plain\" | \"stroked\"",
          "description": "This attribute specify the appearance of the button.",
          "defaultValue": "'plain'",
          "required": false
        },
        {
          "name": "ripple",
          "type": "boolean",
          "description": "Specify wether the button should have a ripple effect or not.",
          "defaultValue": "true",
          "required": false
        },
        {
          "name": "shape",
          "type": "\"normal\" | \"round\" | \"small\" | \"square\"",
          "description": "Specify the shape of the button.",
          "defaultValue": "'normal'",
          "required": false
        },
        {
          "name": "type",
          "type": "\"button\" | \"submit\"",
          "description": "Specify the button type.",
          "defaultValue": "'button'",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-card",
      "path": "./src/components/card/card.tsx",
      "description": "",
      "attributes": [
        {
          "name": "mode",
          "type": "\"flat\" | \"raised\"",
          "description": "",
          "defaultValue": "'raised'",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "mode",
          "type": "\"flat\" | \"raised\"",
          "description": "",
          "defaultValue": "'raised'",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-card-body",
      "path": "./src/components/card-body/card-body.tsx",
      "description": "",
      "attributes": [],
      "properties": [],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-checkbox",
      "path": "./src/components/checkbox/checkbox.tsx",
      "description": "```html\r\n<wcs-checkbox style=\"margin: 16px 0px;\">Normal checkbox</wcs-checkbox>\r\n<wcs-checkbox style=\"margin: 16px 0px;\" checked=\"true\">Default checked checkbox</wcs-checkbox>\r\n<wcs-checkbox style=\"margin: 16px 0px;\">Checkbox</wcs-checkbox>\r\n<wcs-checkbox style=\"margin: 16px 0px;\" indeterminate=\"true\">Checkbox indeterminate</wcs-checkbox>\r\n```",
      "attributes": [
        {
          "name": "checked",
          "type": "boolean",
          "description": "If `true`, the checkbox is selected.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "indeterminate",
          "type": "boolean",
          "description": "If `true` the checkbox is in indeterminate state.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "label-alignment",
          "type": "\"bottom\" | \"center\" | \"top\"",
          "description": "Specifie the alignment of the checkbox with the label content",
          "defaultValue": "'center'",
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "description": "",
          "defaultValue": "this.checkboxId",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "checked",
          "type": "boolean",
          "description": "If `true`, the checkbox is selected.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "indeterminate",
          "type": "boolean",
          "description": "If `true` the checkbox is in indeterminate state.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "labelAlignment",
          "type": "\"bottom\" | \"center\" | \"top\"",
          "description": "Specifie the alignment of the checkbox with the label content",
          "defaultValue": "'center'",
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "description": "",
          "defaultValue": "this.checkboxId",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsChange",
          "description": "Emitted when the checked property has changed."
        }
      ],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-com-nav",
      "path": "./src/components/com-nav/com-nav.tsx",
      "description": "This component is the implementation of the navigation bar dedicated to communication design.\r\n\r\n```html\r\n\r\n\r\n```",
      "attributes": [
        {
          "name": "app-name",
          "type": "string",
          "description": "",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "appName",
          "type": "string",
          "description": "",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-com-nav-category",
      "path": "./src/components/com-nav-category/com-nav-category.tsx",
      "description": "",
      "attributes": [
        {
          "name": "label",
          "type": "string",
          "description": "",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "label",
          "type": "string",
          "description": "",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsCategoryItemClicked",
          "description": ""
        },
        {
          "name": "wcsCategoryOpened",
          "description": ""
        }
      ],
      "methods": [
        {
          "name": "close",
          "description": "Close the category",
          "signature": "close() => Promise<void>"
        },
        {
          "name": "open",
          "description": "Opens the category",
          "signature": "open() => Promise<void>"
        }
      ],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-com-nav-submenu",
      "path": "./src/components/com-nav-submenu/com-nav-submenu.tsx",
      "description": "",
      "attributes": [
        {
          "name": "label",
          "type": "string",
          "description": "",
          "required": false
        },
        {
          "name": "panel-description",
          "type": "string",
          "description": "",
          "required": false
        },
        {
          "name": "panel-title",
          "type": "string",
          "description": "",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "label",
          "type": "string",
          "description": "",
          "required": false
        },
        {
          "name": "panelDescription",
          "type": "string",
          "description": "",
          "required": false
        },
        {
          "name": "panelTitle",
          "type": "string",
          "description": "",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsSubmenuOpened",
          "description": ""
        }
      ],
      "methods": [
        {
          "name": "close",
          "description": "Close the menu",
          "signature": "close() => Promise<void>"
        },
        {
          "name": "open",
          "description": "Opens the menu",
          "signature": "open() => Promise<void>"
        }
      ],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-divider",
      "path": "./src/components/divider/divider.tsx",
      "description": "",
      "attributes": [],
      "properties": [],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-dropdown",
      "path": "./src/components/dropdown/dropdown.tsx",
      "description": "",
      "attributes": [
        {
          "name": "disabled",
          "type": "boolean",
          "description": "Specifies whether the dropdown button is clickable or not",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "mode",
          "type": "\"clear\" | \"plain\" | \"stroked\"",
          "description": "Dropdown's button mode",
          "defaultValue": "'stroked'",
          "required": false
        },
        {
          "name": "no-arrow",
          "type": "boolean",
          "description": "Hides the arrow in the button",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "placement",
          "type": "\"auto\" | \"auto-end\" | \"auto-start\" | \"bottom\" | \"bottom-end\" | \"bottom-start\" | \"left\" | \"left-end\" | \"left-start\" | \"right\" | \"right-end\" | \"right-start\" | \"top\" | \"top-end\" | \"top-start\"",
          "description": "placement of the dropdown's popover",
          "defaultValue": "'bottom-end'",
          "required": false
        },
        {
          "name": "shape",
          "type": "\"normal\" | \"round\" | \"small\" | \"square\"",
          "description": "Dropdown's button shape",
          "defaultValue": "'normal'",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "disabled",
          "type": "boolean",
          "description": "Specifies whether the dropdown button is clickable or not",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "mode",
          "type": "\"clear\" | \"plain\" | \"stroked\"",
          "description": "Dropdown's button mode",
          "defaultValue": "'stroked'",
          "required": false
        },
        {
          "name": "noArrow",
          "type": "boolean",
          "description": "Hides the arrow in the button",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "placement",
          "type": "\"auto\" | \"auto-end\" | \"auto-start\" | \"bottom\" | \"bottom-end\" | \"bottom-start\" | \"left\" | \"left-end\" | \"left-start\" | \"right\" | \"right-end\" | \"right-start\" | \"top\" | \"top-end\" | \"top-start\"",
          "description": "placement of the dropdown's popover",
          "defaultValue": "'bottom-end'",
          "required": false
        },
        {
          "name": "shape",
          "type": "\"normal\" | \"round\" | \"small\" | \"square\"",
          "description": "Dropdown's button shape",
          "defaultValue": "'normal'",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-dropdown-divider",
      "path": "./src/components/dropdown-divider/dropdown-divider.tsx",
      "description": "",
      "attributes": [],
      "properties": [],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-dropdown-header",
      "path": "./src/components/dropdown-header/dropdown-header.tsx",
      "description": "",
      "attributes": [],
      "properties": [],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-dropdown-item",
      "path": "./src/components/dropdown-item/dropdown-item.tsx",
      "description": "",
      "attributes": [],
      "properties": [],
      "events": [
        {
          "name": "wcsDropdownItemClick",
          "description": ""
        }
      ],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-editable-field",
      "path": "./src/components/editable-field/editable-field.tsx",
      "description": "Editable fields can be used to simplify the user experience. They avoid the use of a redirection to a form to edit the\r\ndata of an entity.\r\n\r\nThis component is not present in the SNCF design system specifications, so we tried to build it in the most\r\n\"discoverable\" way possible (for users who interact with), but it's a first version.",
      "attributes": [
        {
          "name": "error-msg",
          "type": "string",
          "description": "Error message displayed under the field if validation failed.",
          "defaultValue": "null",
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "description": "Label of the field",
          "required": true
        },
        {
          "name": "readonly",
          "type": "boolean",
          "description": "Specify whether the field is editable or not",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "type",
          "type": "\"input\" | \"select\" | \"textarea\"",
          "description": "Specifies which component is used for editing",
          "defaultValue": "'input'",
          "required": false
        },
        {
          "name": "value",
          "type": "any",
          "description": "Initial value of the field",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "errorMsg",
          "type": "string",
          "description": "Error message displayed under the field if validation failed.",
          "defaultValue": "null",
          "required": false
        },
        {
          "name": "formatFn",
          "type": "(value: any) => string",
          "description": "Function used to format the value",
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "description": "Label of the field",
          "required": true
        },
        {
          "name": "readonly",
          "type": "boolean",
          "description": "Specify whether the field is editable or not",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "type",
          "type": "\"input\" | \"select\" | \"textarea\"",
          "description": "Specifies which component is used for editing",
          "defaultValue": "'input'",
          "required": false
        },
        {
          "name": "validateFn",
          "type": "(value: any) => boolean",
          "description": "Function to customize the validation of the data during the update",
          "required": false
        },
        {
          "name": "value",
          "type": "any",
          "description": "Initial value of the field",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsChange",
          "description": "event called at each (valid) update of the field."
        }
      ],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-error",
      "path": "./src/components/error/error.tsx",
      "description": "",
      "attributes": [],
      "properties": [],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-field",
      "path": "./src/components/field/field.tsx",
      "description": "This component can be used to display the details of an entity. It is built around the label and the content of the field\r\n\r\n```html\r\n<wcs-field>\r\n    <wcs-field-label>Le nom du champs</wcs-field-label>\r\n    <wcs-field-content>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec massa mi, hendrerit dictum dui sed, porttitor ullamcorper diam.</wcs-field-content>\r\n</wcs-field>\r\n<wcs-field>\r\n    <wcs-field-label>Autre label</wcs-field-label>\r\n    <wcs-field-content>In hac habitasse platea dictumst.</wcs-field-content>\r\n</wcs-field>\r\n```",
      "attributes": [],
      "properties": [],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-field-content",
      "path": "./src/components/field-content/field-content.tsx",
      "description": "",
      "attributes": [],
      "properties": [],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-field-label",
      "path": "./src/components/field-label/field-label.tsx",
      "description": "",
      "attributes": [],
      "properties": [],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-footer",
      "path": "./src/components/footer/footer.tsx",
      "description": "The footer component has been designed to leave as much customization as possible to the developer. The footers are\r\noften specific to the application developed.\r\n\r\nThere are 3 distinct areas of which only one is assigned a specific function :\r\n\r\n- All the elements slotted in the component without name come to be positioned in the first zone. For details on the\r\n  templates to use in the footer, you can consult this\r\n  documentation: [https://design-bootstrap.sncf.fr/docs/4.3/layout/footer/](https://design-bootstrap.sncf.fr/docs/4.3/layout/footer/)\r\n- The slotted elements with the name `end-left` are positioned in the bottom left zone which must contain only links. **These links are automatically styled by the component**.\r\n- Finally, the slotted elements with the name end-right are positioned in the last zone at the bottom right. For\r\n  applications that offer several languages to users, it is here that the choice of language can be made as on the\r\n  sncf.com website for example. You can also place actions related to social networks, ...\r\n\r\nthe maximum width used by the footer content is defined by the css variable `--wcs-com-content-max-width`\r\n\r\n```\r\n                <─────────────────────────  container  ─────────────────────────>\r\n  ┌────────────┬─────────────────────────────────────────────────────────────────┬────────────┐\r\n  │            │                                                                 │            │\r\n  │            │                              Slot                               │            │\r\n  │            │                         (without name)                          │            │\r\n  │            │                                                                 │            │\r\n  │            ├────────────────────────────────┬────────────────────────────────┤            │\r\n  │            │                                │                                │            │\r\n  │            │              Slot              │              Slot              │            │\r\n  │            │            end-left            │            end-right           │            │\r\n  └────────────┴────────────────────────────────┴────────────────────────────────┴────────────┘\r\n```\r\n\r\n```html\r\n<wcs-footer>\r\n    <p>Contenu libre</p>\r\n    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce vel neque et dolor egestas posuere nec sed neque.\r\n        In porttitor orci vitae orci maximus, eget convallis nisi auctor. Nunc maximus vulputate maximus. Mauris ornare\r\n        tortor mi. Quisque laoreet, erat sit amet volutpat ornare, ligula ante pharetra lacus, sit amet ornare libero\r\n        odio eget nunc. Cras facilisis sem id tellus tempor, consectetur laoreet erat ornare. Sed aliquam tortor et quam\r\n        viverra, nec finibus lacus mattis.</p>\r\n    <a slot=\"end-left\" href=\"#\">Plan du site</a>\r\n    <a slot=\"end-left\" href=\"#\">Mentions légales & CGU</a>\r\n    <a slot=\"end-left\" href=\"#\">Données personnelles & cookies</a>\r\n    <a slot=\"end-left\" href=\"#\">Portail de la cybersécurité</a>\r\n    <span slot=\"end-right\" href=\"#\">Séléction de la langue</span>\r\n</wcs-footer>\r\n```",
      "attributes": [],
      "properties": [],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-form-field",
      "path": "./src/components/form-field/form-field.tsx",
      "description": "TODO:\r\n- [ ] Suffix button style",
      "attributes": [
        {
          "name": "icon",
          "type": "any",
          "description": "Name of the material icon to add to the field",
          "required": false
        },
        {
          "name": "is-error",
          "type": "boolean",
          "description": "Specifies whether the form field is in an error state. Displays the field border in red and the message contained in the wcs-error component",
          "defaultValue": "false",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "icon",
          "type": "any",
          "description": "Name of the material icon to add to the field",
          "required": false
        },
        {
          "name": "isError",
          "type": "boolean",
          "description": "Specifies whether the form field is in an error state. Displays the field border in red and the message contained in the wcs-error component",
          "defaultValue": "false",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-galactic",
      "path": "./src/components/galactic/galactic.tsx",
      "description": "*Part of communication design system*\r\n\r\nThis component replaces the vertical navbar for sites and applications that use the communication design system\r\n\r\n```html\r\n<wcs-galactic text=\"NomSuperApp est un site SNCF\">\r\n    <wcs-galactic-menu text=\"TOUT SNCF\">\r\n        <div style=\"margin-bottom: 8px\"><a href=\"#\" style=\"text-decoration: none; color: var(--wcs-white)\">CGU</a></div>\r\n        <div style=\"margin-bottom: 8px\"><a href=\"#\" style=\"text-decoration: none; color: var(--wcs-white)\">À Propos</a></div>\r\n        <div style=\"margin-bottom: 8px\"><a href=\"#\" style=\"text-decoration: none; color: var(--wcs-white)\">Un autre lien</a></div>\r\n        <wcs-button shape=\"small\">Un bouton</wcs-button>\r\n    </wcs-galactic-menu>\r\n</wcs-galactic>\r\n```",
      "attributes": [
        {
          "name": "text",
          "type": "string",
          "description": "Text to display in the bar",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "text",
          "type": "string",
          "description": "Text to display in the bar",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-galactic-menu",
      "path": "./src/components/galactic-menu/galactic-menu.tsx",
      "description": "",
      "attributes": [
        {
          "name": "text",
          "type": "string",
          "description": "Text to be displayed in the galactic bar",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "text",
          "type": "string",
          "description": "Text to be displayed in the galactic bar",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-grid",
      "path": "./src/components/grid/grid.tsx",
      "description": "",
      "attributes": [
        {
          "name": "loading",
          "type": "boolean",
          "description": "Flag to display spinner during data loading",
          "required": false
        },
        {
          "name": "row-id-path",
          "type": "string",
          "description": "Name of the object's key that will be used to display the cells whose keyValue attribute matches to the\r\nobject's value for this key.",
          "required": false
        },
        {
          "name": "selected-items",
          "type": "any",
          "description": "Set the selected items",
          "defaultValue": "[]",
          "required": false
        },
        {
          "name": "selection-config",
          "type": "\"multiple\" | \"none\" | \"single\"",
          "description": "Used to manage grid's row selection",
          "defaultValue": "'none'",
          "required": false
        },
        {
          "name": "server-mode",
          "type": "boolean",
          "description": "True to manage sort and pagination with a backend server, default: false",
          "required": false
        },
        {
          "name": "wcs-grid-pagination-id",
          "type": "string",
          "description": "",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "data",
          "type": "any[]",
          "description": "",
          "required": false
        },
        {
          "name": "loading",
          "type": "boolean",
          "description": "Flag to display spinner during data loading",
          "required": false
        },
        {
          "name": "rowIdPath",
          "type": "string",
          "description": "Name of the object's key that will be used to display the cells whose keyValue attribute matches to the\r\nobject's value for this key.",
          "required": false
        },
        {
          "name": "selectedItems",
          "type": "any",
          "description": "Set the selected items",
          "defaultValue": "[]",
          "required": false
        },
        {
          "name": "selectionConfig",
          "type": "\"multiple\" | \"none\" | \"single\"",
          "description": "Used to manage grid's row selection",
          "defaultValue": "'none'",
          "required": false
        },
        {
          "name": "serverMode",
          "type": "boolean",
          "description": "True to manage sort and pagination with a backend server, default: false",
          "required": false
        },
        {
          "name": "wcsGridPaginationId",
          "type": "string",
          "description": "",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsGridAllSelectionChange",
          "description": "Event emitted when all rows are selected or unselected"
        },
        {
          "name": "wcsGridSelectionChange",
          "description": "Event emitted when a row is selected or unselected"
        }
      ],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-grid-column",
      "path": "./src/components/grid-column/grid-column.tsx",
      "description": "",
      "attributes": [
        {
          "name": "custom-cells",
          "type": "boolean",
          "description": "",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "hidden",
          "type": "boolean",
          "description": "",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "description": "",
          "required": false
        },
        {
          "name": "path",
          "type": "string",
          "description": "",
          "required": false
        },
        {
          "name": "sort",
          "type": "boolean",
          "description": "",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "sort-order",
          "type": "\"asc\" | \"desc\" | \"none\"",
          "description": "",
          "defaultValue": "'none'",
          "required": false
        },
        {
          "name": "width",
          "type": "string",
          "description": "Set the column <th> element width",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "customCells",
          "type": "boolean",
          "description": "",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "formatter",
          "type": "(_h: HyperFunc<VNode>, column: HTMLWcsGridColumnElement, rowData: WcsGridRowData) => HTMLElement | HTMLElement[]",
          "description": "",
          "required": false
        },
        {
          "name": "hidden",
          "type": "boolean",
          "description": "",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "description": "",
          "required": false
        },
        {
          "name": "path",
          "type": "string",
          "description": "",
          "required": false
        },
        {
          "name": "sort",
          "type": "boolean",
          "description": "",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "sortFn",
          "type": "(a: any, b: any, column: HTMLWcsGridColumnElement) => 0 | 1 | -1",
          "description": "",
          "required": false
        },
        {
          "name": "sortOrder",
          "type": "\"asc\" | \"desc\" | \"none\"",
          "description": "",
          "defaultValue": "'none'",
          "required": false
        },
        {
          "name": "width",
          "type": "string",
          "description": "Set the column <th> element width",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsHiddenChange",
          "description": ""
        },
        {
          "name": "wcsSortChange",
          "description": ""
        }
      ],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-grid-custom-cell",
      "path": "./src/components/grid-custom-cell/grid-custom-cell.tsx",
      "description": "",
      "attributes": [
        {
          "name": "column-id",
          "type": "string",
          "description": "ID of the column for which to render the cell",
          "required": false
        },
        {
          "name": "row-id",
          "type": "any",
          "description": "Key value of the object rendered for the cell's row",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "columnId",
          "type": "string",
          "description": "ID of the column for which to render the cell",
          "required": false
        },
        {
          "name": "rowId",
          "type": "any",
          "description": "Key value of the object rendered for the cell's row",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-grid-pagination",
      "path": "./src/components/grid-pagination/grid-pagination.tsx",
      "description": "",
      "attributes": [
        {
          "name": "current-page",
          "type": "number",
          "description": "",
          "defaultValue": "0",
          "required": false
        },
        {
          "name": "items-count",
          "type": "number",
          "description": "",
          "defaultValue": "0",
          "required": false
        },
        {
          "name": "page-count",
          "type": "number",
          "description": "",
          "defaultValue": "1",
          "required": false
        },
        {
          "name": "page-size",
          "type": "number",
          "description": "",
          "defaultValue": "this.availablePageSizes[0]",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "availablePageSizes",
          "type": "number[]",
          "description": "",
          "defaultValue": "[10, 20, 50]",
          "required": false
        },
        {
          "name": "currentPage",
          "type": "number",
          "description": "",
          "defaultValue": "0",
          "required": false
        },
        {
          "name": "itemsCount",
          "type": "number",
          "description": "",
          "defaultValue": "0",
          "required": false
        },
        {
          "name": "pageCount",
          "type": "number",
          "description": "",
          "defaultValue": "1",
          "required": false
        },
        {
          "name": "pageSize",
          "type": "number",
          "description": "",
          "defaultValue": "this.availablePageSizes[0]",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsGridPaginationChange",
          "description": ""
        }
      ],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-header",
      "path": "./src/components/header/header.tsx",
      "description": "",
      "attributes": [],
      "properties": [],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-hint",
      "path": "./src/components/hint/hint.tsx",
      "description": "",
      "attributes": [
        {
          "name": "small",
          "type": "boolean",
          "description": "",
          "defaultValue": "false",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "small",
          "type": "boolean",
          "description": "",
          "defaultValue": "false",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-horizontal-stepper",
      "path": "./src/components/horizontal-stepper/horizontal-stepper.tsx",
      "description": "",
      "attributes": [
        {
          "name": "check-on-complete",
          "type": "boolean",
          "description": "Specifies whether a check should be displayed when a step is passed.",
          "required": false
        },
        {
          "name": "current-step",
          "type": "number",
          "description": "index of the active step. The index corresponds to the index of the step in the 'steps' list",
          "defaultValue": "0",
          "required": false
        },
        {
          "name": "mode",
          "type": "\"linear\" | \"nonLinear\"",
          "description": "Specifies if the stepper is in linear mode (the user can only click on the next step)\r\nor non-linear (the user can click on any step)",
          "defaultValue": "'nonLinear'",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "checkOnComplete",
          "type": "boolean",
          "description": "Specifies whether a check should be displayed when a step is passed.",
          "required": false
        },
        {
          "name": "currentStep",
          "type": "number",
          "description": "index of the active step. The index corresponds to the index of the step in the 'steps' list",
          "defaultValue": "0",
          "required": false
        },
        {
          "name": "mode",
          "type": "\"linear\" | \"nonLinear\"",
          "description": "Specifies if the stepper is in linear mode (the user can only click on the next step)\r\nor non-linear (the user can click on any step)",
          "defaultValue": "'nonLinear'",
          "required": false
        },
        {
          "name": "steps",
          "type": "HorizontalStepConfig[]",
          "description": "steps to display",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsHorizontalStepClick",
          "description": "Emits when the user selects a new step."
        }
      ],
      "methods": [
        {
          "name": "next",
          "description": "",
          "signature": "next() => Promise<void>"
        },
        {
          "name": "previous",
          "description": "",
          "signature": "previous() => Promise<void>"
        }
      ],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-icon",
      "path": "./src/components/icon/icon.tsx",
      "description": "",
      "attributes": [
        {
          "name": "icon",
          "type": "string",
          "description": "",
          "required": false
        },
        {
          "name": "size",
          "type": "\"140px\" | \"1x\" | \"1x2\" | \"1x5\" | \"1x7\" | \"2x\" | \"30px\" | \"3x\" | \"50px\" | \"66px\" | \"90px\" | \"96px\" | \"x5\" | \"x75\"",
          "description": "",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "icon",
          "type": "string",
          "description": "",
          "required": false
        },
        {
          "name": "size",
          "type": "\"140px\" | \"1x\" | \"1x2\" | \"1x5\" | \"1x7\" | \"2x\" | \"30px\" | \"3x\" | \"50px\" | \"66px\" | \"90px\" | \"96px\" | \"x5\" | \"x75\"",
          "description": "",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-input",
      "path": "./src/components/input/input.tsx",
      "description": "Mainly inspired from Ionic Input Component",
      "attributes": [
        {
          "name": "accept",
          "type": "string",
          "description": "If the value of the type attribute is `\"file\"`, then this attribute will indicate the types of files that the server accepts, otherwise it will be ignored. The value must be a comma-separated list of unique content type specifiers.",
          "required": false
        },
        {
          "name": "autocapitalize",
          "type": "string",
          "description": "Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\r\nAvailable options: `\"off\"`, `\"none\"`, `\"on\"`, `\"sentences\"`, `\"words\"`, `\"characters\"`.",
          "defaultValue": "'off'",
          "required": false
        },
        {
          "name": "autocomplete",
          "type": "\"off\" | \"on\" | \"name\" | \"honorific-prefix\" | \"given-name\" | \"additional-name\" | \"family-name\" | \"honorific-suffix\" | \"nickname\" | \"email\" | \"username\" | \"new-password\" | \"current-password\" | \"one-time-code\" | \"organization-title\" | \"organization\" | \"street-address\" | \"address-line1\" | \"address-line2\" | \"address-line3\" | \"address-level4\" | \"address-level3\" | \"address-level2\" | \"address-level1\" | \"country\" | \"country-name\" | \"postal-code\" | \"cc-name\" | \"cc-given-name\" | \"cc-additional-name\" | \"cc-family-name\" | \"cc-number\" | \"cc-exp\" | \"cc-exp-month\" | \"cc-exp-year\" | \"cc-csc\" | \"cc-type\" | \"transaction-currency\" | \"transaction-amount\" | \"language\" | \"bday\" | \"bday-day\" | \"bday-month\" | \"bday-year\" | \"sex\" | \"tel\" | \"tel-country-code\" | \"tel-national\" | \"tel-area-code\" | \"tel-local\" | \"tel-extension\" | \"impp\" | \"url\" | \"photo\"",
          "description": "Indicates whether the value of the control can be automatically completed by the browser.",
          "defaultValue": "'off'",
          "required": false
        },
        {
          "name": "autocorrect",
          "type": "\"off\" | \"on\"",
          "description": "Whether auto correction should be enabled when the user is entering/editing the text value.",
          "defaultValue": "'off'",
          "required": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "description": "This Boolean attribute lets you specify that a form control should have input focus when the page loads.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "clear-input",
          "type": "boolean",
          "description": "If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "clear-on-edit",
          "type": "boolean",
          "description": "If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.",
          "required": false
        },
        {
          "name": "debounce",
          "type": "number",
          "description": "Set the amount of time, in milliseconds, to wait to trigger the `wcsChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.",
          "defaultValue": "0",
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "If `true`, the user cannot interact with the input.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "enterkeyhint",
          "type": "\"done\" | \"enter\" | \"go\" | \"next\" | \"previous\" | \"search\" | \"send\"",
          "description": "A hint to the browser for which enter key to display.\r\nPossible values: `\"enter\"`, `\"done\"`, `\"go\"`, `\"next\"`,\r\n`\"previous\"`, `\"search\"`, and `\"send\"`.",
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "description": "Name of the material icon to add to the input",
          "required": false
        },
        {
          "name": "inputmode",
          "type": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\"",
          "description": "A hint to the browser for which keyboard to display.\r\nPossible values: `\"none\"`, `\"text\"`, `\"tel\"`, `\"url\"`,\r\n`\"email\"`, `\"numeric\"`, `\"decimal\"`, and `\"search\"`.",
          "required": false
        },
        {
          "name": "max",
          "type": "string",
          "description": "The maximum value, which must not be less than its minimum (min attribute) value.",
          "required": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "description": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the maximum number of characters that the user can enter.",
          "required": false
        },
        {
          "name": "min",
          "type": "string",
          "description": "The minimum value, which must not be greater than its maximum (max attribute) value.",
          "required": false
        },
        {
          "name": "minlength",
          "type": "number",
          "description": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the minimum number of characters that the user can enter.",
          "required": false
        },
        {
          "name": "multiple",
          "type": "boolean",
          "description": "If `true`, the user can enter more than one value. This attribute applies when the type attribute is set to `\"email\"` or `\"file\"`, otherwise it is ignored.",
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "description": "The name of the control, which is submitted with the form data.",
          "defaultValue": "this.inputId",
          "required": false
        },
        {
          "name": "pattern",
          "type": "string",
          "description": "A regular expression that the value is checked against. The pattern must match the entire value, not just some subset. Use the title attribute to describe the pattern to help the user. This attribute applies when the value of the type attribute is `\"text\"`, `\"search\"`, `\"tel\"`, `\"url\"`, `\"email\"`, `\"date\"`, or `\"password\"`, otherwise it is ignored. When the type attribute is `\"date\"`, `pattern` will only be used in browsers that do not support the `\"date\"` input type natively. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date for more information.",
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "Instructional text that shows before the input has a value.",
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "description": "If `true`, the user cannot modify the value.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "If `true`, the user must fill in a value before submitting a form.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "description": "The initial size of the control. This value is in pixels unless the value of the type attribute is `\"text\"` or `\"password\"`, in which case it is an integer number of characters. This attribute applies only when the `type` attribute is set to `\"text\"`, `\"search\"`, `\"tel\"`, `\"url\"`, `\"email\"`, or `\"password\"`, otherwise it is ignored.",
          "required": false
        },
        {
          "name": "spellcheck",
          "type": "boolean",
          "description": "If `true`, the element will have its spelling and grammar checked.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "state",
          "type": "\"error\" | \"initial\"",
          "description": "Specifies the state of the input. By default the input is in an normal state but you can to set it to 'error' state if the data given by the user is not valid.",
          "defaultValue": "'initial'",
          "required": false
        },
        {
          "name": "step",
          "type": "string",
          "description": "Works with the min and max attributes to limit the increments at which a value can be set.\r\nPossible values are: `\"any\"` or a positive floating point number.",
          "required": false
        },
        {
          "name": "type",
          "type": "\"date\" | \"datetime-local\" | \"email\" | \"month\" | \"number\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"time\" | \"url\" | \"week\"",
          "description": "The type of control to display. The default type is text.",
          "defaultValue": "'text'",
          "required": false
        },
        {
          "name": "value",
          "type": "number | string",
          "description": "The value of the input.",
          "defaultValue": "''",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "accept",
          "type": "string",
          "description": "If the value of the type attribute is `\"file\"`, then this attribute will indicate the types of files that the server accepts, otherwise it will be ignored. The value must be a comma-separated list of unique content type specifiers.",
          "required": false
        },
        {
          "name": "autocapitalize",
          "type": "string",
          "description": "Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.\r\nAvailable options: `\"off\"`, `\"none\"`, `\"on\"`, `\"sentences\"`, `\"words\"`, `\"characters\"`.",
          "defaultValue": "'off'",
          "required": false
        },
        {
          "name": "autocomplete",
          "type": "\"off\" | \"on\" | \"name\" | \"honorific-prefix\" | \"given-name\" | \"additional-name\" | \"family-name\" | \"honorific-suffix\" | \"nickname\" | \"email\" | \"username\" | \"new-password\" | \"current-password\" | \"one-time-code\" | \"organization-title\" | \"organization\" | \"street-address\" | \"address-line1\" | \"address-line2\" | \"address-line3\" | \"address-level4\" | \"address-level3\" | \"address-level2\" | \"address-level1\" | \"country\" | \"country-name\" | \"postal-code\" | \"cc-name\" | \"cc-given-name\" | \"cc-additional-name\" | \"cc-family-name\" | \"cc-number\" | \"cc-exp\" | \"cc-exp-month\" | \"cc-exp-year\" | \"cc-csc\" | \"cc-type\" | \"transaction-currency\" | \"transaction-amount\" | \"language\" | \"bday\" | \"bday-day\" | \"bday-month\" | \"bday-year\" | \"sex\" | \"tel\" | \"tel-country-code\" | \"tel-national\" | \"tel-area-code\" | \"tel-local\" | \"tel-extension\" | \"impp\" | \"url\" | \"photo\"",
          "description": "Indicates whether the value of the control can be automatically completed by the browser.",
          "defaultValue": "'off'",
          "required": false
        },
        {
          "name": "autocorrect",
          "type": "\"off\" | \"on\"",
          "description": "Whether auto correction should be enabled when the user is entering/editing the text value.",
          "defaultValue": "'off'",
          "required": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "description": "This Boolean attribute lets you specify that a form control should have input focus when the page loads.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "clearInput",
          "type": "boolean",
          "description": "If `true`, a clear icon will appear in the input when there is a value. Clicking it clears the input.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "clearOnEdit",
          "type": "boolean",
          "description": "If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.",
          "required": false
        },
        {
          "name": "debounce",
          "type": "number",
          "description": "Set the amount of time, in milliseconds, to wait to trigger the `wcsChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.",
          "defaultValue": "0",
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "If `true`, the user cannot interact with the input.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "enterkeyhint",
          "type": "\"done\" | \"enter\" | \"go\" | \"next\" | \"previous\" | \"search\" | \"send\"",
          "description": "A hint to the browser for which enter key to display.\r\nPossible values: `\"enter\"`, `\"done\"`, `\"go\"`, `\"next\"`,\r\n`\"previous\"`, `\"search\"`, and `\"send\"`.",
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "description": "Name of the material icon to add to the input",
          "required": false
        },
        {
          "name": "inputmode",
          "type": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\"",
          "description": "A hint to the browser for which keyboard to display.\r\nPossible values: `\"none\"`, `\"text\"`, `\"tel\"`, `\"url\"`,\r\n`\"email\"`, `\"numeric\"`, `\"decimal\"`, and `\"search\"`.",
          "required": false
        },
        {
          "name": "max",
          "type": "string",
          "description": "The maximum value, which must not be less than its minimum (min attribute) value.",
          "required": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "description": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the maximum number of characters that the user can enter.",
          "required": false
        },
        {
          "name": "min",
          "type": "string",
          "description": "The minimum value, which must not be greater than its maximum (max attribute) value.",
          "required": false
        },
        {
          "name": "minlength",
          "type": "number",
          "description": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the minimum number of characters that the user can enter.",
          "required": false
        },
        {
          "name": "multiple",
          "type": "boolean",
          "description": "If `true`, the user can enter more than one value. This attribute applies when the type attribute is set to `\"email\"` or `\"file\"`, otherwise it is ignored.",
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "description": "The name of the control, which is submitted with the form data.",
          "defaultValue": "this.inputId",
          "required": false
        },
        {
          "name": "pattern",
          "type": "string",
          "description": "A regular expression that the value is checked against. The pattern must match the entire value, not just some subset. Use the title attribute to describe the pattern to help the user. This attribute applies when the value of the type attribute is `\"text\"`, `\"search\"`, `\"tel\"`, `\"url\"`, `\"email\"`, `\"date\"`, or `\"password\"`, otherwise it is ignored. When the type attribute is `\"date\"`, `pattern` will only be used in browsers that do not support the `\"date\"` input type natively. See https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/date for more information.",
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "Instructional text that shows before the input has a value.",
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "description": "If `true`, the user cannot modify the value.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "If `true`, the user must fill in a value before submitting a form.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "description": "The initial size of the control. This value is in pixels unless the value of the type attribute is `\"text\"` or `\"password\"`, in which case it is an integer number of characters. This attribute applies only when the `type` attribute is set to `\"text\"`, `\"search\"`, `\"tel\"`, `\"url\"`, `\"email\"`, or `\"password\"`, otherwise it is ignored.",
          "required": false
        },
        {
          "name": "spellcheck",
          "type": "boolean",
          "description": "If `true`, the element will have its spelling and grammar checked.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "state",
          "type": "\"error\" | \"initial\"",
          "description": "Specifies the state of the input. By default the input is in an normal state but you can to set it to 'error' state if the data given by the user is not valid.",
          "defaultValue": "'initial'",
          "required": false
        },
        {
          "name": "step",
          "type": "string",
          "description": "Works with the min and max attributes to limit the increments at which a value can be set.\r\nPossible values are: `\"any\"` or a positive floating point number.",
          "required": false
        },
        {
          "name": "type",
          "type": "\"date\" | \"datetime-local\" | \"email\" | \"month\" | \"number\" | \"password\" | \"search\" | \"tel\" | \"text\" | \"time\" | \"url\" | \"week\"",
          "description": "The type of control to display. The default type is text.",
          "defaultValue": "'text'",
          "required": false
        },
        {
          "name": "value",
          "type": "number | string",
          "description": "The value of the input.",
          "defaultValue": "''",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsBlur",
          "description": "Emitted when the input loses focus."
        },
        {
          "name": "wcsChange",
          "description": "Emitted when the value has changed."
        },
        {
          "name": "wcsFocus",
          "description": "Emitted when the input has focus."
        },
        {
          "name": "wcsInput",
          "description": "Emitted when a keyboard input occurred."
        }
      ],
      "methods": [
        {
          "name": "getInputElement",
          "description": "Returns the native `<input>` element used under the hood.",
          "signature": "getInputElement() => Promise<HTMLInputElement>"
        },
        {
          "name": "setFocus",
          "description": "Sets focus on the native `input` in `wcs-input`. Use this method instead of the global\r\n`input.focus()`.",
          "signature": "setFocus() => Promise<void>"
        }
      ],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-label",
      "path": "./src/components/label/label.tsx",
      "description": "",
      "attributes": [
        {
          "name": "required",
          "type": "boolean",
          "description": "",
          "defaultValue": "false",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "required",
          "type": "boolean",
          "description": "",
          "defaultValue": "false",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-list-item",
      "path": "./src/components/list-item/list-item.tsx",
      "description": "",
      "attributes": [
        {
          "name": "activated",
          "type": "boolean",
          "description": "True if the item is active. Adds a background color that highlights it.",
          "defaultValue": "false",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "activated",
          "type": "boolean",
          "description": "True if the item is active. Adds a background color that highlights it.",
          "defaultValue": "false",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-list-item-properties",
      "path": "./src/components/list-item-properties/list-item-properties.tsx",
      "description": "",
      "attributes": [],
      "properties": [],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-list-item-property",
      "path": "./src/components/list-item-property/list-item-property.tsx",
      "description": "",
      "attributes": [],
      "properties": [],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-mat-icon",
      "path": "./src/components/mat-icon/mat-icon.tsx",
      "description": "A component used to display Material Icon, can be usefull when used in wcs-grid.\r\n\r\nWhen used directly in an other Web Component, the global CSS stylesheet doesn't apply to material-icons.\r\nIn this case you can use the Mat-icon with its integrated material stylesheet.\r\n\r\n```html\r\n<wcs-mat-icon size=\"s\" icon=\"info\"></wcs-mat-icon>\r\n```\r\n\r\n```html\r\n<wcs-mat-icon size=\"m\" icon=\"info\" family=\"outlined\"></wcs-mat-icon>\r\n```\r\n\r\n```html\r\n<wcs-mat-icon size=\"l\" icon=\"info\" family=\"twotone\"></wcs-mat-icon>\r\n```\r\n\r\n```html\r\n<wcs-mat-icon size=\"xl\" icon=\"info\" family=\"rounded\"></wcs-mat-icon>\r\n```\r\n\r\n```html\r\n<wcs-mat-icon size=\"s\" icon=\"info\" family=\"sharp\"></wcs-mat-icon>\r\n```",
      "attributes": [
        {
          "name": "family",
          "type": "\"filled\" | \"outlined\" | \"rounded\" | \"sharp\" | \"twotone\"",
          "description": "Family of the icon",
          "defaultValue": "'filled'",
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "description": "Use the icon name from Material Icons",
          "required": false
        },
        {
          "name": "size",
          "type": "\"l\" | \"m\" | \"s\" | \"xl\"",
          "description": "Size of the icon",
          "defaultValue": "'m'",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "family",
          "type": "\"filled\" | \"outlined\" | \"rounded\" | \"sharp\" | \"twotone\"",
          "description": "Family of the icon",
          "defaultValue": "'filled'",
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "description": "Use the icon name from Material Icons",
          "required": false
        },
        {
          "name": "size",
          "type": "\"l\" | \"m\" | \"s\" | \"xl\"",
          "description": "Size of the icon",
          "defaultValue": "'m'",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-modal",
      "path": "./src/components/modal/modal.tsx",
      "description": "",
      "attributes": [
        {
          "name": "backdrop",
          "type": "boolean",
          "description": "Specifies whether the component should display a backdrop on the entire page",
          "defaultValue": "true",
          "required": false
        },
        {
          "name": "show",
          "type": "boolean",
          "description": "Displays the modal",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "show-close-button",
          "type": "boolean",
          "description": "Specifies whether the component should display a close button.\r\nif false, it won't close the modal when the escape key is pressed.",
          "defaultValue": "false",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "backdrop",
          "type": "boolean",
          "description": "Specifies whether the component should display a backdrop on the entire page",
          "defaultValue": "true",
          "required": false
        },
        {
          "name": "show",
          "type": "boolean",
          "description": "Displays the modal",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "showCloseButton",
          "type": "boolean",
          "description": "Specifies whether the component should display a close button.\r\nif false, it won't close the modal when the escape key is pressed.",
          "defaultValue": "false",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsDialogClosed",
          "description": "Triggered when the user leaves the dialog with the closing button."
        }
      ],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-nav",
      "path": "./src/components/nav/nav.tsx",
      "description": "```html\r\n<wcs-nav>\r\n    <wcs-nav-item class=\"active\" text=\"Favoris\"><i class=\"material-icons\">star</i></wcs-nav-item>\r\n    <wcs-nav-item text=\"Collections\"><i class=\"material-icons\">folder</i></wcs-nav-item>\r\n    <wcs-nav-item text=\"Ma base documentaire\"><i class=\"material-icons\">description</i></wcs-nav-item>\r\n    <wcs-nav-item text=\"Distribution\"><i class=\"material-icons\">forward</i></wcs-nav-item>\r\n    <wcs-nav-item text=\"Admin\" ><i class=\"material-icons\">brightness_7</i></wcs-nav-item>\r\n    <wcs-nav-item text=\"Plus\" ><i class=\"material-icons\">more_horiz</i></wcs-nav-item>\r\n    <wcs-nav-item slot=\"bottom\" text=\"Test\" ><i class=\"material-icons\">folder</i></wcs-nav-item>\r\n    <wcs-nav-item slot=\"bottom\" text=\"Support\"><i class=\"material-icons\">chat</i></wcs-nav-item>\r\n</wcs-nav>\r\n```\r\n\r\nAdd the `active` class on the nav-item corresponding to the current navigation element.",
      "attributes": [],
      "properties": [],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-nav-item",
      "path": "./src/components/nav-item/nav-item.tsx",
      "description": "",
      "attributes": [
        {
          "name": "href",
          "type": "string",
          "description": "Attributes mapped to a <a> tag.\r\n\r\nDon't forget to specify [routerLink] if using in conjuction with angular router.",
          "required": false
        },
        {
          "name": "text",
          "type": "string",
          "description": "This attribute specify the text of the item.",
          "defaultValue": "''",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "href",
          "type": "string",
          "description": "Attributes mapped to a <a> tag.\r\n\r\nDon't forget to specify [routerLink] if using in conjuction with angular router.",
          "required": false
        },
        {
          "name": "text",
          "type": "string",
          "description": "This attribute specify the text of the item.",
          "defaultValue": "''",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-progress-bar",
      "path": "./src/components/progress-bar/progress-bar.tsx",
      "description": "Component displaying progress as a bar.",
      "attributes": [
        {
          "name": "show-label",
          "type": "boolean",
          "description": "Whether it displays a label indicating the percentage of progress above the bar.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "small",
          "type": "boolean",
          "description": "Whether the component display the small version",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "value",
          "type": "number",
          "description": "The actual value of the progress.\r\nRanging from 0 to 100.",
          "defaultValue": "0",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "showLabel",
          "type": "boolean",
          "description": "Whether it displays a label indicating the percentage of progress above the bar.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "small",
          "type": "boolean",
          "description": "Whether the component display the small version",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "value",
          "type": "number",
          "description": "The actual value of the progress.\r\nRanging from 0 to 100.",
          "defaultValue": "0",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-progress-radial",
      "path": "./src/components/progress-radial/progress-radial.tsx",
      "description": "",
      "attributes": [
        {
          "name": "show-label",
          "type": "boolean",
          "description": "",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "description": "",
          "defaultValue": "120",
          "required": false
        },
        {
          "name": "value",
          "type": "number",
          "description": "",
          "defaultValue": "0",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "showLabel",
          "type": "boolean",
          "description": "",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "size",
          "type": "number",
          "description": "",
          "defaultValue": "120",
          "required": false
        },
        {
          "name": "value",
          "type": "number",
          "description": "",
          "defaultValue": "0",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-radio",
      "path": "./src/components/radio/radio.component.tsx",
      "description": "",
      "attributes": [
        {
          "name": "checked",
          "type": "boolean",
          "description": "If `true`, the radio is selected.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "If `true`, the user cannot interact with the radio.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "description": "",
          "required": false
        },
        {
          "name": "mode",
          "type": "\"option\" | \"radio\"",
          "description": "",
          "defaultValue": "'radio'",
          "required": false
        },
        {
          "name": "value",
          "type": "any",
          "description": "",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "checked",
          "type": "boolean",
          "description": "If `true`, the radio is selected.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "If `true`, the user cannot interact with the radio.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "label",
          "type": "string",
          "description": "",
          "required": false
        },
        {
          "name": "mode",
          "type": "\"option\" | \"radio\"",
          "description": "",
          "defaultValue": "'radio'",
          "required": false
        },
        {
          "name": "value",
          "type": "any",
          "description": "",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsRadioClick",
          "description": ""
        }
      ],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-radio-group",
      "path": "./src/components/radio-group/radio-group.tsx",
      "description": "Radio buttons are often used in forms or for other functions that let users select only one option from a list. With radio buttons, users cannot make multiple selections from options suggested (as they can with check boxes).\r\n\r\n```html\r\n<wcs-radio-group>\r\n  <wcs-radio label=\"SNCF\" value=\"1\"></wcs-radio>\r\n  <wcs-radio label=\"SNCF Réseau\" value=\"2\"></wcs-radio>\r\n  <wcs-radio label=\"SNCF Voyageurs\" value=\"3\"></wcs-radio>\r\n  <wcs-radio label=\"Gares & Connexions\" value=\"4\"></wcs-radio>\r\n</wcs-radio-group>\r\n```",
      "attributes": [
        {
          "name": "mode",
          "type": "\"option\" | \"radio\"",
          "description": "",
          "defaultValue": "'radio'",
          "required": false
        },
        {
          "name": "name",
          "type": "any",
          "description": "",
          "required": false
        },
        {
          "name": "value",
          "type": "any",
          "description": "",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "mode",
          "type": "\"option\" | \"radio\"",
          "description": "",
          "defaultValue": "'radio'",
          "required": false
        },
        {
          "name": "name",
          "type": "any",
          "description": "",
          "required": false
        },
        {
          "name": "value",
          "type": "any",
          "description": "",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsChange",
          "description": "Emitted when the value has changed."
        }
      ],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-select",
      "path": "./src/components/select/select.tsx",
      "description": "Select component, use in conjuction with wcs-select-option.",
      "attributes": [
        {
          "name": "chips",
          "type": "boolean",
          "description": "If `true`, selected items are shown in chips mode.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "If `true`, the user cannot interact with the select.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "multiple",
          "type": "boolean",
          "description": "If `true`, the user can select multiple values at once.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "description": "The name of the control, which is submitted with the form data.",
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "The text to display when the select is empty.",
          "required": false
        },
        {
          "name": "value",
          "type": "any",
          "description": "The currently selected value.",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "chips",
          "type": "boolean",
          "description": "If `true`, selected items are shown in chips mode.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "compareWith",
          "type": "(optionValue: any, selectedValue: any) => boolean",
          "description": "Function used to compare options, default : deep comparison.",
          "defaultValue": "(optionValue, selectedValue) => _.isEqual(optionValue, selectedValue)",
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "If `true`, the user cannot interact with the select.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "multiple",
          "type": "boolean",
          "description": "If `true`, the user can select multiple values at once.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "description": "The name of the control, which is submitted with the form data.",
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "The text to display when the select is empty.",
          "required": false
        },
        {
          "name": "value",
          "type": "any",
          "description": "The currently selected value.",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsBlur",
          "description": "Emitted when the select loses focus."
        },
        {
          "name": "wcsChange",
          "description": "Emitted when the value has changed."
        },
        {
          "name": "wcsFocus",
          "description": "Emitted when the select has focus."
        }
      ],
      "methods": [
        {
          "name": "close",
          "description": "Close the component.",
          "signature": "close() => Promise<void>"
        },
        {
          "name": "open",
          "description": "Open the component.",
          "signature": "open() => Promise<void>"
        }
      ],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-select-option",
      "path": "./src/components/select-option/select-option.tsx",
      "description": "Select option component, use in conjunction with wcs-select.",
      "attributes": [
        {
          "name": "chip-background-color",
          "type": "string",
          "description": "Chip's background color.",
          "required": false
        },
        {
          "name": "chip-color",
          "type": "string",
          "description": "Chip's displayed text color.",
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "Wether this option can be selected.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "description": "Wether this option is selected.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "value",
          "type": "any",
          "description": "The option value, not what's displayed, use inner text instead.",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "chipBackgroundColor",
          "type": "string",
          "description": "Chip's background color.",
          "required": false
        },
        {
          "name": "chipColor",
          "type": "string",
          "description": "Chip's displayed text color.",
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "Wether this option can be selected.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "selected",
          "type": "boolean",
          "description": "Wether this option is selected.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "value",
          "type": "any",
          "description": "The option value, not what's displayed, use inner text instead.",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsSelectOptionClick",
          "description": ""
        }
      ],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-spinner",
      "path": "./src/components/spinner/spinner.tsx",
      "description": "",
      "attributes": [
        {
          "name": "mode",
          "type": "\"border\" | \"growing\"",
          "description": "Indicates the spinner display mode.\r\nAccepted values: `border` or `growing`",
          "defaultValue": "'border'",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "mode",
          "type": "\"border\" | \"growing\"",
          "description": "Indicates the spinner display mode.\r\nAccepted values: `border` or `growing`",
          "defaultValue": "'border'",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-switch",
      "path": "./src/components/switch/switch.tsx",
      "description": "",
      "attributes": [
        {
          "name": "checked",
          "type": "boolean",
          "description": "If `true`, the switch is selected.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "description": "",
          "defaultValue": "this.switchId",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "checked",
          "type": "boolean",
          "description": "If `true`, the switch is selected.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "description": "",
          "defaultValue": "this.switchId",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsChange",
          "description": "Emitted when the checked property has changed."
        }
      ],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-tab",
      "path": "./src/components/tab/tab.tsx",
      "description": "Tab content component.\r\nUse this component to specify the content of a component.",
      "attributes": [
        {
          "name": "header",
          "type": "string",
          "description": "The header you want to be displayed for this tab.",
          "required": false
        },
        {
          "name": "item-key",
          "type": "any",
          "description": "",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "header",
          "type": "string",
          "description": "The header you want to be displayed for this tab.",
          "required": false
        },
        {
          "name": "itemKey",
          "type": "any",
          "description": "",
          "required": false
        }
      ],
      "events": [
        {
          "name": "tabLoaded",
          "description": "Do not use, meant for internal use only."
        }
      ],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-tabs",
      "path": "./src/components/tabs/tabs.tsx",
      "description": "Tabs component to switch between tab content.\r\nUse in conjuction with `wcs-tab`.",
      "attributes": [
        {
          "name": "align",
          "type": "\"center\" | \"end\" | \"start\"",
          "description": "Tab headers alignment.",
          "defaultValue": "'start'",
          "required": false
        },
        {
          "name": "gutter",
          "type": "boolean",
          "description": "Determines if tabs header should have a border at the bottom",
          "required": false
        },
        {
          "name": "headers-only",
          "type": "boolean",
          "description": "Whether to skip rendering the tabpanel with the content of the selected tab. Use this prop if you plan to\r\nseparately render the tab content.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "selected-index",
          "type": "number",
          "description": "Current selected tab index.\r\nStarts at 0.",
          "defaultValue": "0",
          "required": false
        },
        {
          "name": "selected-key",
          "type": "any",
          "description": "",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "align",
          "type": "\"center\" | \"end\" | \"start\"",
          "description": "Tab headers alignment.",
          "defaultValue": "'start'",
          "required": false
        },
        {
          "name": "gutter",
          "type": "boolean",
          "description": "Determines if tabs header should have a border at the bottom",
          "required": false
        },
        {
          "name": "headersOnly",
          "type": "boolean",
          "description": "Whether to skip rendering the tabpanel with the content of the selected tab. Use this prop if you plan to\r\nseparately render the tab content.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "selectedIndex",
          "type": "number",
          "description": "Current selected tab index.\r\nStarts at 0.",
          "defaultValue": "0",
          "required": false
        },
        {
          "name": "selectedKey",
          "type": "any",
          "description": "",
          "required": false
        }
      ],
      "events": [
        {
          "name": "tabChange",
          "description": "\r\nEmitted when the selected tab change."
        }
      ],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-textarea",
      "path": "./src/components/textarea/textarea.tsx",
      "description": "Mainly inspired from Ionic Textarea Component",
      "attributes": [
        {
          "name": "auto-grow",
          "type": "boolean",
          "description": "If `true`, the element height will increase based on the value.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "autocapitalize",
          "type": "string",
          "description": "Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.",
          "defaultValue": "'none'",
          "required": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "description": "This Boolean attribute lets you specify that a form control should have input focus when the page loads.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "clear-on-edit",
          "type": "boolean",
          "description": "If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "cols",
          "type": "number",
          "description": "The visible width of the text control, in average character widths. If it is specified, it must be a positive integer.",
          "required": false
        },
        {
          "name": "debounce",
          "type": "number",
          "description": "Set the amount of time, in milliseconds, to wait to trigger the `wcsChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.",
          "defaultValue": "0",
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "If `true`, the user cannot interact with the textarea.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "enterkeyhint",
          "type": "\"done\" | \"enter\" | \"go\" | \"next\" | \"previous\" | \"search\" | \"send\"",
          "description": "A hint to the browser for which enter key to display.\r\nPossible values: `\"enter\"`, `\"done\"`, `\"go\"`, `\"next\"`,\r\n`\"previous\"`, `\"search\"`, and `\"send\"`.",
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "description": "Name of the material icon to add to the input",
          "required": false
        },
        {
          "name": "inputmode",
          "type": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\"",
          "description": "A hint to the browser for which keyboard to display.\r\nPossible values: `\"none\"`, `\"text\"`, `\"tel\"`, `\"url\"`,\r\n`\"email\"`, `\"numeric\"`, `\"decimal\"`, and `\"search\"`.",
          "required": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "description": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the maximum number of characters that the user can enter.",
          "required": false
        },
        {
          "name": "minlength",
          "type": "number",
          "description": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the minimum number of characters that the user can enter.",
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "description": "The name of the control, which is submitted with the form data.",
          "defaultValue": "this.inputId",
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "Instructional text that shows before the input has a value.",
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "description": "If `true`, the user cannot modify the value.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "If `true`, the user must fill in a value before submitting a form.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "rows",
          "type": "number",
          "description": "The number of visible text lines for the control.",
          "required": false
        },
        {
          "name": "spellcheck",
          "type": "boolean",
          "description": "If `true`, the element will have its spelling and grammar checked.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "state",
          "type": "\"error\" | \"initial\"",
          "description": "Specifies the state of the input. By default the input is in an initial state but you can set it to 'error' state if the data given by the user is not valid.",
          "defaultValue": "'initial'",
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "description": "The value of the textarea.",
          "defaultValue": "''",
          "required": false
        },
        {
          "name": "wrap",
          "type": "\"hard\" | \"off\" | \"soft\"",
          "description": "Indicates how the control wraps text.",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "autoGrow",
          "type": "boolean",
          "description": "If `true`, the element height will increase based on the value.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "autocapitalize",
          "type": "string",
          "description": "Indicates whether and how the text value should be automatically capitalized as it is entered/edited by the user.",
          "defaultValue": "'none'",
          "required": false
        },
        {
          "name": "autofocus",
          "type": "boolean",
          "description": "This Boolean attribute lets you specify that a form control should have input focus when the page loads.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "clearOnEdit",
          "type": "boolean",
          "description": "If `true`, the value will be cleared after focus upon edit. Defaults to `true` when `type` is `\"password\"`, `false` for all other types.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "cols",
          "type": "number",
          "description": "The visible width of the text control, in average character widths. If it is specified, it must be a positive integer.",
          "required": false
        },
        {
          "name": "debounce",
          "type": "number",
          "description": "Set the amount of time, in milliseconds, to wait to trigger the `wcsChange` event after each keystroke. This also impacts form bindings such as `ngModel` or `v-model`.",
          "defaultValue": "0",
          "required": false
        },
        {
          "name": "disabled",
          "type": "boolean",
          "description": "If `true`, the user cannot interact with the textarea.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "enterkeyhint",
          "type": "\"done\" | \"enter\" | \"go\" | \"next\" | \"previous\" | \"search\" | \"send\"",
          "description": "A hint to the browser for which enter key to display.\r\nPossible values: `\"enter\"`, `\"done\"`, `\"go\"`, `\"next\"`,\r\n`\"previous\"`, `\"search\"`, and `\"send\"`.",
          "required": false
        },
        {
          "name": "icon",
          "type": "string",
          "description": "Name of the material icon to add to the input",
          "required": false
        },
        {
          "name": "inputmode",
          "type": "\"decimal\" | \"email\" | \"none\" | \"numeric\" | \"search\" | \"tel\" | \"text\" | \"url\"",
          "description": "A hint to the browser for which keyboard to display.\r\nPossible values: `\"none\"`, `\"text\"`, `\"tel\"`, `\"url\"`,\r\n`\"email\"`, `\"numeric\"`, `\"decimal\"`, and `\"search\"`.",
          "required": false
        },
        {
          "name": "maxlength",
          "type": "number",
          "description": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the maximum number of characters that the user can enter.",
          "required": false
        },
        {
          "name": "minlength",
          "type": "number",
          "description": "If the value of the type attribute is `text`, `email`, `search`, `password`, `tel`, or `url`, this attribute specifies the minimum number of characters that the user can enter.",
          "required": false
        },
        {
          "name": "name",
          "type": "string",
          "description": "The name of the control, which is submitted with the form data.",
          "defaultValue": "this.inputId",
          "required": false
        },
        {
          "name": "placeholder",
          "type": "string",
          "description": "Instructional text that shows before the input has a value.",
          "required": false
        },
        {
          "name": "readonly",
          "type": "boolean",
          "description": "If `true`, the user cannot modify the value.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "required",
          "type": "boolean",
          "description": "If `true`, the user must fill in a value before submitting a form.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "rows",
          "type": "number",
          "description": "The number of visible text lines for the control.",
          "required": false
        },
        {
          "name": "spellcheck",
          "type": "boolean",
          "description": "If `true`, the element will have its spelling and grammar checked.",
          "defaultValue": "false",
          "required": false
        },
        {
          "name": "state",
          "type": "\"error\" | \"initial\"",
          "description": "Specifies the state of the input. By default the input is in an initial state but you can set it to 'error' state if the data given by the user is not valid.",
          "defaultValue": "'initial'",
          "required": false
        },
        {
          "name": "value",
          "type": "string",
          "description": "The value of the textarea.",
          "defaultValue": "''",
          "required": false
        },
        {
          "name": "wrap",
          "type": "\"hard\" | \"off\" | \"soft\"",
          "description": "Indicates how the control wraps text.",
          "required": false
        }
      ],
      "events": [
        {
          "name": "wcsBlur",
          "description": "Emitted when the input loses focus."
        },
        {
          "name": "wcsChange",
          "description": "Emitted when the input value has changed."
        },
        {
          "name": "wcsFocus",
          "description": "Emitted when the input has focus."
        },
        {
          "name": "wcsInput",
          "description": "Emitted when a keyboard input occurred."
        }
      ],
      "methods": [
        {
          "name": "fitContent",
          "description": "This method make the textarea automatically adopt the size of the content without a scroll bar",
          "signature": "fitContent() => Promise<void>"
        },
        {
          "name": "getInputElement",
          "description": "Returns the native `<textarea>` element used under the hood.",
          "signature": "getInputElement() => Promise<HTMLTextAreaElement>"
        },
        {
          "name": "setFocus",
          "description": "Sets focus on the native `textarea` in `wcs-textarea`. Use this method instead of the global\r\n`textarea.focus()`.",
          "signature": "setFocus() => Promise<void>"
        }
      ],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    },
    {
      "name": "wcs-tooltip",
      "path": "./src/components/tooltip/tooltip.tsx",
      "description": "```html\r\n<wcs-button shape=\"small\" id=\"1-bottom\">Bottom</wcs-button>\r\n<wcs-tooltip for=\"1-bottom\">A tooltip!</wcs-tooltip>\r\n<wcs-button shape=\"small\" id=\"right\">Right</wcs-button>\r\n<wcs-tooltip for=\"right\" position=\"right\">A tooltip!</wcs-tooltip>\r\n<wcs-button shape=\"small\" id=\"top\">Top</wcs-button>\r\n<wcs-tooltip for=\"top\" position=\"top\">A tooltip!</wcs-tooltip>\r\n<wcs-button shape=\"small\" id=\"left\">Left</wcs-button>\r\n<wcs-tooltip for=\"left\" position=\"left\">\r\n    Lorem ipsum dolor sit amet consectetur, adipisicing elit. Quam repellat, illum molestias iusto eveniet ullam voluptate at est soluta iure, quos unde, ipsa dolores error a nihil rerum nesciunt delectus.\r\n</wcs-tooltip>\r\n```",
      "attributes": [
        {
          "name": "for",
          "type": "string",
          "description": "The **id** of the element the tooltip's going to describe.",
          "required": false
        },
        {
          "name": "position",
          "type": "\"bottom\" | \"left\" | \"right\" | \"top\"",
          "description": "Where the tooltip is going to show relative to the element it's describing.",
          "defaultValue": "'bottom'",
          "required": false
        }
      ],
      "properties": [
        {
          "name": "for",
          "type": "string",
          "description": "The **id** of the element the tooltip's going to describe.",
          "required": false
        },
        {
          "name": "position",
          "type": "\"bottom\" | \"left\" | \"right\" | \"top\"",
          "description": "Where the tooltip is going to show relative to the element it's describing.",
          "defaultValue": "'bottom'",
          "required": false
        }
      ],
      "events": [],
      "methods": [],
      "slots": [],
      "cssProperties": [],
      "cssParts": []
    }
  ]
}