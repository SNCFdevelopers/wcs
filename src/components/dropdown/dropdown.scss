@import '../../style/focus-outline.scss';

:host {
    display: flex;
}

wcs-button {
    --wcs-button-padding: 8px 10px 8px 16px !important;
    height: fit-content;
}

/* Visually hide the native button */
button {
    position: absolute;
    opacity: 0;
    height: 1px;
    width: 1px;
    overflow: hidden;
    clip-path: inset(50%);
    white-space: nowrap;
    outline: 0;
    outline-offset: 0;
}

button:focus-visible + wcs-button {
    @include focus-outline($border-radius: var(--wcs-button-border-radius));
}

@supports not selector(button:focus-visible + wcs-button) {
    button:focus-within + wcs-button {
        @include focus-outline($border-radius: var(--wcs-button-border-radius));
    }
}

:host([no-arrow]) {
    wcs-button {
        --wcs-button-padding: 8px 16px 8px 16px !important;
    }
}

:host([size=s][no-arrow]) {
    wcs-button {
        --wcs-button-padding: var(--wcs-padding-s) var(--wcs-padding-m) !important;
    }
}

:host([size=s]) {
    wcs-button {
        --wcs-button-padding: var(--wcs-padding-s) calc(6px - var(--wcs-padding-s)) var(--wcs-padding-s) var(--wcs-padding-m) !important;
    }
}

.wcs-button-content-wrapper {
    display: flex;
}

.popover {
    display: none;
    border: 1px solid #d7d7d7;
    border-radius: var(--wcs-border-radius);
    background-color: var(--wcs-white);
    z-index: 9999;
}

.show {
    display: block;
}

// XXX: So that item hover background does not overflow
.container {
    border-radius: inherit;
    overflow: hidden;
    padding: calc(var(--wcs-padding) / 2) 0;
    background-color: var(--wcs-white);
}

// FIXME : Workaround to display the SelectArrow in blue when the background is white / transparent
// Remove this when the SelectArrow has its own tokens and background-contrast handling
:host(:not([mode=plain])) {
    // SVG arrow inside the button, on clear background
    .arrow {
        fill: var(--wcs-primary);
    }
}

// SVG arrow inside the button, on primary background
.arrow {
    fill: var(--wcs-contrast);
}

// Popover arrow
#arrow,
#arrow::before {
    position: absolute;
    width: 8px;
    height: 8px;
    background: inherit;
    border: solid 1px #d7d7d7;
}

#arrow {
    visibility: hidden;
    z-index: -1;
}

#arrow::before {
    visibility: visible;
    content: '';
    transform: rotate(45deg);
}

#is-empty {
    display: block;
    width: 20ch;
    padding: 0 var(--wcs-padding);
}

.popover[data-popper-placement^='top'] > #arrow {
    bottom: -5px;
}

.popover[data-popper-placement^='bottom'] > #arrow {
    top: -6px;
}

.popover[data-popper-placement^='left'] > #arrow {
    right: -4px;
}

.popover[data-popper-placement^='right'] > #arrow {
    left: -6px;
}
