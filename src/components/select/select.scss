@import "../../style/ripple.scss";
@import '../../style/focus-outline.scss';

:host {
    --wcs-select-ligther-percentage: 40;
    --wcs-select-border-radius: var(--wcs-border-radius);
    --wcs-select-background-color: var(--wcs-light);
    --wcs-select-placeholder-color: var(--wcs-text-medium);
    --wcs-select-value-color: var(--wcs-primary);
    --wcs-select-border-color: transparent;
    --wcs-select-outline-color: var(--wcs-primary);
    --wcs-select-overlay-max-height: 360px;
    --wcs-select-option-height: var(--wcs-size-m);
    --wcs-select-border-width: 1px;

    display: block;
    position: relative;
    outline: none;
    user-select: none;
    box-sizing: border-box;

    // So the arrow on the right doesn't shrink when text overflows.
    svg {
        flex-shrink: 0;
    }

    .arrow {
        fill: var(--wcs-select-value-color);
    }

    .chip {
        fill: var(--wcs-contrast);
        opacity: calc((100 - var(--wcs-select-ligther-percentage)) / 100);

        &:hover {
            opacity: 100;
        }
    }
}

:host(.expanded) {

    --wcs-select-border-color: var(--wcs-text-light);

    .wcs-select-options {
        display: block;
    }
}

:host([aria-invalid=true]) {
    --wcs-select-outline-color: var(--wcs-red) !important;
    .wcs-select-control {
        outline: solid 2px var(--wcs-select-outline-color);
    }
}

:host(:not(.expanded):focus-visible) {
    .wcs-select-control {
        @include focus-outline(var(--wcs-select-outline-color), var(--wcs-select-border-radius), $outline-offset: 0);
    }
}

:host([disabled]) {
    cursor: not-allowed;

    .wcs-select-control,
    label {
        cursor: default;
        pointer-events: none;
    }

    label {
        color: var(--wcs-text-disabled);
    }

    .arrow {
        fill: var(--wcs-text-medium);
    }
}

label {
    padding-left: calc(var(--wcs-padding)/2 - var(--wcs-select-border-width));
    padding-right: calc(var(--wcs-padding) - var(--wcs-select-border-width));
    font-weight: 500;
    cursor: pointer;
    color: var(--wcs-select-color);
    transition: color 125ms ease-in;
    // Hide overflowing display text
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

:host([size=m]) {
    min-height: var(--wcs-size-m);
    --wcs-select-font-size: 1rem;
    --wcs-internal-select-chip-size: calc(var(--wcs-size-s) - 2px);

    .wcs-select-control {
        min-height: var(--wcs-size-m);
    }

    // Autocomplete
    &:host([autocomplete]) {
        .autocomplete-field {
            height: calc(var(--wcs-size-s) - 2px);
        }
        .wcs-select-value-container {
            // (select height - chips height) / 2 - border width / 2
            padding-top: calc(calc(calc(var(--wcs-size-m) - var(--wcs-internal-select-chip-size)) / 2) - var(--wcs-select-border-width));
            padding-bottom: calc(calc(calc(var(--wcs-size-m) - var(--wcs-internal-select-chip-size)) / 2) - var(--wcs-select-border-width));
        }
    }
}

:host([size=l]) {
    min-height: var(--wcs-size-l);
    --wcs-select-font-size: 1.0625rem;
    --wcs-internal-select-chip-size: var(--wcs-size-s);

    .wcs-select-control {
        min-height: var(--wcs-size-l);
    }

    // Autocomplete
    &:host([autocomplete]) {
        .autocomplete-field {
            height: var(--wcs-size-s);
        }
        .wcs-select-value-container {
            // (select height - chips height) / 2 - border width / 2
            padding-top: calc(calc(calc(var(--wcs-size-l) - var(--wcs-internal-select-chip-size)) / 2) - var(--wcs-select-border-width));
            padding-bottom: calc(calc(calc(var(--wcs-size-l) - var(--wcs-internal-select-chip-size)) / 2) - var(--wcs-select-border-width));
        }
    }
}

:host([chips]) {
    .wcs-select-control {
        flex-wrap: wrap;
    }
}

.wcs-select-control {
    box-sizing: border-box;

    @include ripple;
    display: flex;
    align-items: center;
    padding-right: var(--wcs-text-padding);
    background-color: var(--wcs-select-background-color);
    border-radius: var(--wcs-select-border-radius);
    border: var(--wcs-select-border-color) solid var(--wcs-select-border-width);
    font-size: var(--wcs-select-font-size, 1rem);
    line-height: 1.5;
    cursor: pointer;
}

.wcs-select-placeholder {
    color: var(--wcs-select-placeholder-color);
    font-style: italic;
    font-weight: 400;
}

.wcs-select-value {
    color: var(--wcs-select-value-color);
    font-weight: var(--wcs-font-weight-form-value);
}

.wcs-select-value-container {
    margin-top: 4px;
    margin-bottom: 4px;
    margin-left: calc(var(--wcs-margin) / 2);

    max-width: calc(100% - calc(24px + var(--wcs-base-margin))); // 24px (width of arrow svg) + 8px of padding = 32px

    display: flex;
    flex-direction: row;
    gap: 4px;
    align-items: center;
    flex-wrap: wrap;
}

.wcs-select-chip {
    box-sizing: border-box;
    height: var(--wcs-internal-select-chip-size);
    line-height: 1.375;
    color: var(--wcs-contrast);
    background-color: var(--wcs-base);
    border-radius: 0.75rem;
    display: flex;
    align-items: center;
    padding: calc(calc(var(--wcs-padding) - 8px) / 2) var(--wcs-padding);
    overflow: initial;
    z-index: 1;
}

.wcs-select-options {
    display: none;
    position: absolute;
    z-index: 999999999;

    border: solid var(--wcs-select-border-width) var(--wcs-select-border-color);
    border-radius: var(--wcs-select-border-radius);

    max-height: var(--wcs-select-overlay-max-height);
    overflow-y: auto;
    width: calc(100% - calc(2 * var(--wcs-select-border-width)));

    background-color: var(--wcs-white);
    color: var(--wcs-text-medium);
}

:host([autocomplete]) {
    .wcs-select-value-container {
        margin: 0;
        width: 100%;
        padding-left: var(--wcs-padding-m);
    }

    input {
        border-radius: var(--wcs-border-radius);
        font: unset;
        background-color: transparent;
        outline: none;
        border: none;
        padding: 0 var(--wcs-margin);

        color: var(--wcs-primary);
        font-weight: var(--wcs-font-weight-form-value) !important;
        font-size: var(--wcs-select-font-size);
        line-height: 1.5;
    }

    input:focus-within {
        @include focus-outline(var(--wcs-select-outline-color), var(--wcs-border-radius), 0);
    }

    input::placeholder {
        font-style: italic;
        font-weight: 400;
    }
}

.autocomplete-field {
    width: 0;
    min-width: 50px;
    border-radius: var(--wcs-border-radius);
    flex-grow: 1;
}

.noresult-container {
    margin: var(--wcs-margin);
}
